{"version":3,"sources":["components/astrology/chatList/ChatList.js","assets/img/astrologin-bg.jpg","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js"],"names":["ChatList","props","handleDeleteList","deleteId","axiosConfig","get","then","resp","getuserList","console","log","data","catch","err","componentDidMount","userId","JSON","parse","localStorage","getItem","response","status","setState","allUserList","error","handleChating","selectedId","handleBalacecheck","astroId","userid","astroid","type","post","history","push","pathname","state","swal","fullname","all_skills","language","long_bio","Exp","sunday","monday","friday","thursday","tuesday","wednesday","saturday","To","callCharge","Form","astrid","astroMobile","Gallary","astro","avg_rating","modal","toggle","bind","this","headerTop","className","style","float","width","backgroundColor","position","backgroundAttachment","backgroundSize","color","padding","backgroundImage","astrologinbg","backgroundPosition","backgroundRepeat","textAlign","md","to","length","map","list","key","_id","firstname","onClick","class","aria-hidden","birthPlace","date_of_time","dob","gender","mobile","occupation","marital_status","p_birthPlace","p_date_of_time","p_firstname","p_lastname","size","maxWidth","isOpen","React","Component","module","exports","componentWillMount","constructor","getDerivedStateFromProps","undefined","componentWillReceiveProps","nextProps","prevState","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning"],"mappings":"2TASMA,EAAQ,kDACZ,WAAYC,GAAQ,IAAD,EAkCoB,OAlCpB,qBACjB,cAAMA,IA0CRC,iBAAmB,SAAAC,GACjBC,IACGC,IAAI,uBAAD,OAAwBF,IAC3BG,MAAK,SAAAC,GACJ,EAAKC,cACLC,QAAQC,IAAI,OAAQH,EAAKI,SAE1BC,OAAM,SAAAC,GACLJ,QAAQC,IAAI,KAAMG,OAEtB,EAEFC,kBAAoB,WAClB,EAAKN,eACL,EACFA,YAAc,WACZ,IAAIO,EAASC,KAAKC,MAAMC,aAAaC,QAAQ,YAE7Cf,IACGC,IAAI,0BAAD,OAA2BU,IAC9BT,MAAK,SAAAc,IACyB,IAAzBA,EAAST,KAAKU,QAChB,EAAKC,SAAS,CAAEC,YAAaH,EAAST,KAAKA,UAG9CC,OAAM,SAAAY,GACLf,QAAQC,IAAIc,OAEhB,EACFC,cAAgB,SAAAC,GACd,EAAKC,qBA6BL,EAEFA,kBAAoB,WAClB,IAAIZ,EAASC,KAAKC,MAAMC,aAAaC,QAAQ,YAEzCS,EAAUV,aAAaC,QAAQ,WACnCV,QAAQC,IAAI,UAAWkB,GAEvB,IAAMjB,EAAO,CACXkB,OAAQd,EACRe,QAASF,EACTG,KAAM,QAGR3B,IACG4B,KAAK,sBAAuBrB,GAC5BL,MAAK,SAAAc,GACJX,QAAQC,IAAIU,EAAST,OACQ,IAAzBS,EAAST,KAAKU,OAChB,EAAKpB,MAAMgC,QAAQC,KAAK,CACtBC,SAAU,mBACVC,MAAOhB,EAAST,OAEb0B,IAAK,WAAY,oCAEzBzB,OAAM,SAAAY,GACLf,QAAQC,IAAIc,OA7HhB,EAAKY,MAAQ,CACXb,YAAa,GACbZ,KAAM,GACN2B,SAAU,GACVC,WAAY,GACZC,SAAU,GACVC,SAAU,GACVC,IAAK,GACLC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,SAAU,GACVC,QAAS,GACTC,UAAW,GACXC,SAAU,GACVC,GAAI,GACJC,WAAY,GACZC,KAAM,GACNC,OAAQ,GACRxB,OAAQ,GACRyB,YAAa,GACbC,QAAS,GACT3B,QAAS,GACT4B,MAAO,GACPC,WAAY,EAAC,IAGf,EAAKrB,MAAQ,CACXsB,OAAO,GAGT,EAAKC,OAAS,EAAKA,OAAOC,KAAK,gBAAM,EAqRtC,OApRA,mCAED,WACEC,KAAKvC,SAAS,CACZoC,OAAQG,KAAKzB,MAAMsB,UAEtB,oBA0FD,WAAU,IAAD,OACCnC,EAAgBsC,KAAKzB,MAArBb,YACR,OACE,kBAAC,IAAS,CAACuC,UAAU,WACnB,6BAASC,UAAU,aACjB,yBACEA,UAAU,GACVC,MAAO,CACLC,MAAO,OACPC,MAAO,OACPC,gBAAiB,UACjBC,SAAU,WACVC,qBAAsB,QACtBC,eAAgB,QAChBC,MAAO,UACPC,QAAS,qBACTC,gBAAgB,OAAD,OAASC,IAAY,KACpCC,mBAAoB,gBACpBC,iBAAkB,aAClBC,UAAW,WAGb,kBAAC,IAAS,KACR,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACC,GAAG,MACN,yBAAKf,UAAU,sBACb,wBAAIC,MAAO,CAAEO,MAAO,SAAS,yBAOzC,yBAAKR,UAAU,6BACb,yBAAKA,UAAU,iBACb,6BAASA,UAAU,QACjB,kBAAC,IAAS,KACR,kBAAC,IAAG,KACF,yBAAKA,UAAU,QACb,kBAAC,IAAI,CAACgB,GAAG,mBAAmBhB,UAAU,qBACpC,4BAAQA,UAAU,qBAAmB,0BAK7B,OAAXxC,QAAW,IAAXA,OAAW,EAAXA,EAAayD,QACD,OAAXzD,QAAW,IAAXA,OAAW,EAAXA,EAAa0D,KAAI,SAAAC,GACf,OACE,kBAAC,IAAG,CAACJ,GAAG,IAAIK,IAAKD,EAAKE,IAAKrB,UAAU,QACnC,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BACE,wBAAIA,UAAU,IAAE,aAEd,8BAAOmB,EAAKG,WACZ,yBACEtB,UAAU,SACVC,MAAO,CAAEC,MAAO,SAChBqB,QAAS,kBACP,EAAKpF,iBAAiBgF,EAAKE,OAG7B,uBACEG,MAAM,gBACNC,cAAY,WAQlB,0CAEE,8BAAON,EAAKO,aAEd,4CAEE,8BAAOP,EAAKQ,eAEd,6CAEE,8BAAOR,EAAKS,MAEd,sCAEE,8BAAOT,EAAKU,SAEd,sCAEE,8BAAOV,EAAKW,SAEd,0CAEE,8BAAOX,EAAKY,aAEd,8CAEE,8BAAOZ,EAAKa,iBAEbb,EAAKc,aACJ,kDAEE,8BAAOd,EAAKc,eAEZ,KACHd,EAAKe,eACJ,oDAEE,8BAAOf,EAAKe,iBAEZ,KACHf,EAAKgB,YACJ,kDAEE,8BAAOhB,EAAKgB,cAEZ,KACHhB,EAAKiB,WACJ,iDAEE,8BAAOjB,EAAKiB,aAEZ,KAEJ,yBAAKnC,MAAO,CAAEC,MAAO,UACnB,4BACEF,UAAU,oBACVuB,QAAS,kBACP,EAAK3D,kBAAkBuD,EAAKE,OAC7B,sBAYjB,wBAAIrB,UAAU,eAAa,iCASvC,kBAAC,IAAK,CACJqC,KAAK,KACLpC,MAAO,CAAEqC,SAAU,QAASnC,MAAO,QACnCoC,OAAQzC,KAAKzB,MAAMsB,MACnBC,OAAQE,KAAKF,OACbI,UAAWF,KAAK5D,MAAM8D,WAEtB,kBAAC,IAAW,CAACA,UAAU,OAAOJ,OAAQE,KAAKF,QACzC,wBAAII,UAAU,QAAM,iBAEtB,kBAAC,IAAS,KACR,yBAAKA,UAAU,QACb,+GAIA,kBAAC,IAAI,CAACA,UAAU,QACd,kBAAC,IAAM,CAACQ,MAAM,YAAYe,QAASzB,KAAKF,QAAO,WAIjD,kBAAC,IAAI,CAACI,UAAU,OAAOgB,GAAG,gBACxB,kBAAC,IAAM,0BAOpB,EAxTW,CAASwB,IAAMC,WA0TdxG,a,oBCnUfyG,EAAOC,QAAU,IAA0B,2C,iCCO3C,SAASC,IAEP,IAAIvE,EAAQyB,KAAK+C,YAAYC,yBAAyBhD,KAAK5D,MAAO4D,KAAKzB,OACzD,OAAVA,QAA4B0E,IAAV1E,GACpByB,KAAKvC,SAASc,GAGlB,SAAS2E,EAA0BC,GAQjCnD,KAAKvC,SALL,SAAiB2F,GACf,IAAI7E,EAAQyB,KAAK+C,YAAYC,yBAAyBG,EAAWC,GACjE,OAAiB,OAAV7E,QAA4B0E,IAAV1E,EAAsBA,EAAQ,MAGnCwB,KAAKC,OAE7B,SAASqD,EAAoBF,EAAWG,GACtC,IACE,IAAIC,EAAYvD,KAAK5D,MACjBgH,EAAYpD,KAAKzB,MACrByB,KAAK5D,MAAQ+G,EACbnD,KAAKzB,MAAQ+E,EACbtD,KAAKwD,6BAA8B,EACnCxD,KAAKyD,wBAA0BzD,KAAK0D,wBAAwBH,EAAWH,GACvE,QACApD,KAAK5D,MAAQmH,EACbvD,KAAKzB,MAAQ6E,GASjB,SAASO,EAAShB,GAChB,IAAIiB,EAAYjB,EAAUiB,UAC1B,IAAKA,IAAcA,EAAUC,iBAC3B,MAAM,IAAIC,MAAM,sCAElB,GAAkD,oBAAvCnB,EAAUK,0BAAwF,oBAAtCY,EAAUF,wBAC/E,OAAOf,EAMT,IAAIoB,EAAqB,KACrBC,EAA4B,KAC5BC,EAAsB,KAgB1B,GAf4C,oBAAjCL,EAAUd,mBACnBiB,EAAqB,qBACmC,oBAAxCH,EAAUM,4BAC1BH,EAAqB,6BAE4B,oBAAxCH,EAAUV,0BACnBc,EAA4B,4BACmC,oBAA/CJ,EAAUO,mCAC1BH,EAA4B,oCAEe,oBAAlCJ,EAAUP,oBACnBY,EAAsB,sBACmC,oBAAzCL,EAAUQ,6BAC1BH,EAAsB,8BAEG,OAAvBF,GAA6D,OAA9BC,GAA8D,OAAxBC,EAA8B,CACrG,IAAII,EAAgB1B,EAAU2B,aAAe3B,EAAU4B,KACnDC,EAA2D,oBAAvC7B,EAAUK,yBAA0C,6BAA+B,4BAC3G,MAAMc,MAAM,2FAA6FO,EAAgB,SAAWG,EAAa,uDAAgF,OAAvBT,EAA8B,OAASA,EAAqB,KAAqC,OAA9BC,EAAqC,OAASA,EAA4B,KAA+B,OAAxBC,EAA+B,OAASA,EAAsB,IAAhZ,wIAcd,GARkD,oBAAvCtB,EAAUK,2BACnBY,EAAUd,mBAAqBA,EAC/Bc,EAAUV,0BAA4BA,GAMS,oBAAtCU,EAAUF,wBAAwC,CAC3D,GAA4C,oBAAjCE,EAAUa,mBACnB,MAAM,IAAIX,MAAM,qHAElBF,EAAUP,oBAAsBA,EAChC,IAAIoB,EAAqBb,EAAUa,mBACnCb,EAAUa,mBAAqB,SAAoClB,EAAWH,EAAWsB,GASvF,IAAIC,EAAW3E,KAAKwD,4BAA8BxD,KAAKyD,wBAA0BiB,EACjFD,EAAmBG,KAAK5E,KAAMuD,EAAWH,EAAWuB,IAGxD,OAAOhC,EA7GT,gDAwCAG,EAAmB+B,8BAA+B,EAClD3B,EAA0B2B,8BAA+B,EACzDxB,EAAoBwB,8BAA+B","file":"static/js/145.f0ef38dc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button } from \"reactstrap\";\r\nimport LayoutOne from \"../../../layouts/LayoutOne\";\r\nimport astrologinbg from \"../../../assets/img/astrologin-bg.jpg\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass ChatList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allUserList: [],\r\n      data: {},\r\n      fullname: \"\",\r\n      all_skills: \"\",\r\n      language: \"\",\r\n      long_bio: \"\",\r\n      Exp: \"\",\r\n      sunday: \"\",\r\n      monday: \"\",\r\n      friday: \"\",\r\n      thursday: \"\",\r\n      tuesday: \"\",\r\n      wednesday: \"\",\r\n      saturday: \"\",\r\n      To: \"\",\r\n      callCharge: \"\",\r\n      Form: \"\",\r\n      astrid: \"\",\r\n      userid: \"\",\r\n      astroMobile: \"\",\r\n      Gallary: [],\r\n      astroId: \"\",\r\n      astro: \"\",\r\n      avg_rating: [false],\r\n    };\r\n\r\n    this.state = {\r\n      modal: false,\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  }\r\n\r\n  handleDeleteList = deleteId => {\r\n    axiosConfig\r\n      .get(`admin/dlt_ChatIntek/${deleteId}`)\r\n      .then(resp => {\r\n        this.getuserList();\r\n        console.log(\"resp\", resp.data);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"er\", err);\r\n      });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getuserList();\r\n  };\r\n  getuserList = () => {\r\n    let userId = JSON.parse(localStorage.getItem(\"user_id\"));\r\n    // console.log(\"userId\", userId);\r\n    axiosConfig\r\n      .get(`/admin/intekListByUser/${userId}`)\r\n      .then(response => {\r\n        if (response.data.status === true) {\r\n          this.setState({ allUserList: response.data.data });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  handleChating = selectedId => {\r\n    this.handleBalacecheck();\r\n\r\n    // let userId = JSON.parse(localStorage.getItem(\"user_id\"));\r\n    // let mobileNo = JSON.parse(localStorage.getItem(\"user_mobile_no\"));\r\n    // console.log(\"USer\", mobileNo);\r\n    // let object = {\r\n    //   chatIntekId: selectedId,\r\n    //   userId: userId,\r\n    //   astroId: this.state.astroId,\r\n    // };\r\n    // let obj = {\r\n    //   userid: userId,\r\n    //   astroid: this.state.astroId,\r\n    //   From: this.state.mobile, //astro no\r\n    //   To: mobileNo, //user no\r\n    // };\r\n    // console.log(\"obj\", obj);\r\n    // axiosConfig\r\n    //   .post(`/user/selectIntakeForm`, object)\r\n    //   .then(ress => {\r\n    //     if (ress.data.status === true) {\r\n    //       this.props.history.push(\"/chatApp\");\r\n    //     }\r\n    //     console.log(\"asss\", ress.data.status);\r\n    //   })\r\n\r\n    //   .catch(err => {\r\n    //     console.log(\"err\", err);\r\n    //   });\r\n  };\r\n\r\n  handleBalacecheck = () => {\r\n    let userId = JSON.parse(localStorage.getItem(\"user_id\"));\r\n    // let { id } = this.props.match.params;\r\n    let astroId = localStorage.getItem(\"astroId\");\r\n    console.log(\"astroId\", astroId);\r\n\r\n    const data = {\r\n      userid: userId,\r\n      astroid: astroId,\r\n      type: \"Chat\",\r\n    };\r\n\r\n    axiosConfig\r\n      .post(`/user/addCallWallet`, data)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        if (response.data.status === true) {\r\n          this.props.history.push({\r\n            pathname: \"/waitingpagechat\",\r\n            state: response.data,\r\n          });\r\n        } else swal(\"Recharge\", \"you don't have enough Balance\");\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    const { allUserList } = this.state;\r\n    return (\r\n      <LayoutOne headerTop=\"visible\">\r\n        <section className=\"pt-0 pb-0\">\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              float: \"left\",\r\n              width: \"100%\",\r\n              backgroundColor: \"#272727\",\r\n              position: \"relative\",\r\n              backgroundAttachment: \"fixed\",\r\n              backgroundSize: \"cover\",\r\n              color: \"#ffffff\",\r\n              padding: \" 50px 0px 50px 0px\",\r\n              backgroundImage: `url(${astrologinbg})`,\r\n              backgroundPosition: \"center center\",\r\n              backgroundRepeat: \" no-repeat\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <Container>\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <div className=\"leftcont text-left\">\r\n                    <h1 style={{ color: \"#fff\" }}>User Chat List </h1>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </section>\r\n        <div className=\"col-lg-12 col-md-12 mb-30\">\r\n          <div className=\"category-home\">\r\n            <section className=\"pt-0\">\r\n              <Container>\r\n                <Row>\r\n                  <div className=\"my-1\">\r\n                    <Link to=\"/userrequestform\" className=\"btn btn-denger wr\">\r\n                      <button className=\"btn btn-denger wr\">\r\n                        Add New Intake Form\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                  {allUserList?.length ? (\r\n                    allUserList?.map(list => {\r\n                      return (\r\n                        <Col md=\"4\" key={list._id} className=\"mt-1\">\r\n                          <div className=\"card \">\r\n                            <div className=\"card-body \">\r\n                              <ul>\r\n                                <li className=\"\">\r\n                                  FirstName:\r\n                                  <span>{list.firstname}</span>\r\n                                  <div\r\n                                    className=\"delete\"\r\n                                    style={{ float: \"right\" }}\r\n                                    onClick={() =>\r\n                                      this.handleDeleteList(list._id)\r\n                                    }\r\n                                  >\r\n                                    <i\r\n                                      class=\"fa fa-trash-o\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </div>\r\n                                </li>\r\n                                {/* <li>\r\n                                    LastName:\r\n                                    <span>{list.lastname}</span>\r\n                                  </li> */}\r\n                                <li>\r\n                                  BirthPlace:\r\n                                  <span>{list.birthPlace}</span>\r\n                                </li>\r\n                                <li>\r\n                                  Date Of Time:\r\n                                  <span>{list.date_of_time}</span>\r\n                                </li>\r\n                                <li>\r\n                                  Date Of Birth:\r\n                                  <span>{list.dob}</span>\r\n                                </li>\r\n                                <li>\r\n                                  Gender:\r\n                                  <span>{list.gender}</span>\r\n                                </li>\r\n                                <li>\r\n                                  Mobile:\r\n                                  <span>{list.mobile}</span>\r\n                                </li>\r\n                                <li>\r\n                                  Occupation:\r\n                                  <span>{list.occupation}</span>\r\n                                </li>\r\n                                <li>\r\n                                  Marital Status:\r\n                                  <span>{list.marital_status}</span>\r\n                                </li>\r\n                                {list.p_birthPlace ? (\r\n                                  <li>\r\n                                    Partner BirthPlace:\r\n                                    <span>{list.p_birthPlace}</span>\r\n                                  </li>\r\n                                ) : null}\r\n                                {list.p_date_of_time ? (\r\n                                  <li>\r\n                                    Partner Date Of Time:\r\n                                    <span>{list.p_date_of_time}</span>\r\n                                  </li>\r\n                                ) : null}\r\n                                {list.p_firstname ? (\r\n                                  <li>\r\n                                    Partner First Name:\r\n                                    <span>{list.p_firstname}</span>\r\n                                  </li>\r\n                                ) : null}\r\n                                {list.p_lastname ? (\r\n                                  <li>\r\n                                    Partner Last Name:\r\n                                    <span>{list.p_lastname}</span>\r\n                                  </li>\r\n                                ) : null}\r\n\r\n                                <div style={{ float: \"right\" }}>\r\n                                  <button\r\n                                    className=\"btn btn-denger wr\"\r\n                                    onClick={() =>\r\n                                      this.handleBalacecheck(list._id)\r\n                                    }\r\n                                  >\r\n                                    Start Chat\r\n                                  </button>\r\n                                </div>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <h3 className=\"text-center\">No Intake Form Available</h3>\r\n                  )}\r\n                </Row>\r\n              </Container>\r\n            </section>\r\n          </div>\r\n        </div>\r\n\r\n        {/* modal for recharge*/}\r\n        <Modal\r\n          size=\"md\"\r\n          style={{ maxWidth: \"600px\", width: \"100%\" }}\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggle}\r\n          className={this.props.className}\r\n        >\r\n          <ModalHeader className=\"wr-3\" toggle={this.toggle}>\r\n            <h2 className=\"wr-4\">Recharge Now</h2>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"Wr-1\">\r\n              <h3>\r\n                Minimum balance of 5 minutes (INR 25.0) is required to start\r\n                call with RajnishM\r\n              </h3>\r\n              <Link className=\"wr-5\">\r\n                <Button color=\"secondary\" onClick={this.toggle}>\r\n                  Cancel\r\n                </Button>\r\n              </Link>\r\n              <Link className=\"wr-6\" to=\"/walletmoney\">\r\n                <Button>Recharge</Button>\r\n              </Link>\r\n            </div>\r\n          </ModalBody>\r\n        </Modal>\r\n      </LayoutOne>\r\n    );\r\n  }\r\n}\r\nexport default ChatList;\r\n","module.exports = __webpack_public_path__ + \"static/media/astrologin-bg.f858568c.jpg\";","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n  if (typeof Component.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName = typeof Component.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n    throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') + '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://fb.me/react-async-component-lifecycle-hooks');\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');\n    }\n    prototype.componentWillUpdate = componentWillUpdate;\n    var componentDidUpdate = prototype.componentDidUpdate;\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n  return Component;\n}\nexport { polyfill };"],"sourceRoot":""}